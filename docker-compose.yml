version: "3.8"

services:
  # habilitados_db:
  #   image: mongo
  #   container_name: habilitados_db
  #   restart: always
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: ${CPU_LIMIT}
  #         memory: ${MEM_LIMIT}
  #       reservations:
  #         cpus: ${CPU_RESERV}
  #         memory: ${MEM_RESERV}
  #   ports:
  #     - 27017:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${ROOT_USER}
  #     MONGO_INITDB_ROOT_PASSWORD: ${ROOT_PASS}
  #   volumes:
  #     - "./data:/data/db"

  # first, we define the three mongo servers that will act as replicas
  # which is the same as discussed in the previous section
  habafdb1:
    container_name: habafdb1
    image: mongo
    networks:
      - mongo-rset-net
    expose:
      - 27017
    ports:
      - 27017:27017
    restart: always
    volumes:
      - "./data1:/data/db"
      - "./rs-init.sh:/scripts/rs-init.sh"
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "habaf-mongo-set"
      ]
  habafdb2:
    container_name: habafdb2
    image: mongo
    networks:
      - mongo-rset-net
    expose:
      - 27018
    ports:
      - 27018:27017
    restart: always
    volumes:
      - "./data2:/data/db"
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "habaf-mongo-set"
      ]
  habafdb3:
    container_name: habafdb3
    image: mongo
    networks:
      - mongo-rset-net
    expose:
      - 27019
    ports:
      - 27019:27017
    restart: always
    volumes:
      - "./data3:/data/db"
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "habaf-mongo-set"
      ]
networks:
  mongo-rset-net:
    driver: bridge
